
Allocating common symbols
Common symbol       size              file

Ghalf               0x2               Src/myDataOps.o
Gbyte               0x1               Src/myDataOps.o
Gword               0x4               Src/myDataOps.o
Garray              0x100             Src/myDataOps.o

Discarded input sections

 .group         0x0000000000000000        0xc Src/mainHW02.o
 .group         0x0000000000000000        0xc Src/mainHW02.o
 .text          0x0000000000000000        0x0 Src/mainHW02.o
 .data          0x0000000000000000        0x0 Src/mainHW02.o
 .bss           0x0000000000000000        0x0 Src/mainHW02.o
 .bss           0x0000000000000000      0x107 Src/myDataOps.o
 COMMON         0x0000000000000000      0x110 Src/myDataOps.o
 .data          0x0000000000000000        0x0 Src/userLED.o
 .bss           0x0000000000000000        0x0 Src/userLED.o
 .text          0x0000000000000000       0x14 startup/startup_stm32l476xx.o
 .data          0x0000000000000000        0x0 startup/startup_stm32l476xx.o
 .bss           0x0000000000000000        0x0 startup/startup_stm32l476xx.o

Memory Configuration

Name             Origin             Length             Attributes
RAM              0x0000000020000000 0x0000000000018000 xrw
RAM2             0x0000000010000000 0x0000000000008000 xrw
FLASH            0x0000000008000000 0x0000000000100000 xr
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD Src/mainHW02.o
LOAD Src/myDataOps.o
LOAD Src/userLED.o
LOAD startup/startup_stm32l476xx.o
LOAD /Applications/Ac6/SystemWorkbench.app/Contents/Eclipse/plugins/fr.ac6.mcu.externaltools.arm-none.macos64_1.17.0.201812190825/tools/compiler/bin/../lib/gcc/arm-none-eabi/7.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m/fpv4-sp/hard/libm.a
                0x0000000020018000                _estack = 0x20018000
                0x0000000000000200                _Min_Heap_Size = 0x200
                0x0000000000000400                _Min_Stack_Size = 0x400

.isr_vector     0x0000000008000000      0x188
                0x0000000008000000                . = ALIGN (0x8)
 *(.isr_vector)
 .isr_vector    0x0000000008000000      0x188 startup/startup_stm32l476xx.o
                0x0000000008000000                g_pfnVectors
                0x0000000008000188                . = ALIGN (0x8)

.text           0x0000000008000188      0x2e8
                0x0000000008000188                . = ALIGN (0x8)
 *(.text)
 .text          0x0000000008000188      0x1e4 Src/myDataOps.o
                0x0000000008000188                MywordAddress
                0x0000000008000192                getMywordContents
                0x000000000800019c                addToMywordContents
                0x00000000080001b4                loadConstant01
                0x00000000080001ba                loadConstant02
                0x00000000080001c0                loadConstant03
                0x00000000080001cc                loadConstant04
                0x00000000080001d4                loadConstant05
                0x00000000080001e0                loadConstant06
                0x00000000080001f0                loadConstant07
                0x00000000080001f8                loadVariable01
                0x0000000008000200                loadVariable02
                0x0000000008000208                loadVariable03
                0x000000000800021e                loadVariable04
                0x000000000800022a                loadVariable05
                0x0000000008000234                storeVariable01
                0x0000000008000242                storeVariable02
                0x0000000008000252                storeVariable03
                0x0000000008000268                ROMdata
 .text          0x000000000800036c       0x4c Src/userLED.o
                0x000000000800036c                initGPIOA5
                0x00000000080003a4                togglePA5
 *(.text*)
 .text.SWdelay  0x00000000080003b8       0x28 Src/mainHW02.o
                0x00000000080003b8                SWdelay
 .text.main     0x00000000080003e0       0x40 Src/mainHW02.o
                0x00000000080003e0                main
 .text.Reset_Handler
                0x0000000008000420       0x48 startup/startup_stm32l476xx.o
                0x0000000008000420                Reset_Handler
 .text.Default_Handler
                0x0000000008000468        0x2 startup/startup_stm32l476xx.o
                0x0000000008000468                TIM1_BRK_TIM15_IRQHandler
                0x0000000008000468                EXTI2_IRQHandler
                0x0000000008000468                TIM8_TRG_COM_IRQHandler
                0x0000000008000468                TIM8_CC_IRQHandler
                0x0000000008000468                DebugMon_Handler
                0x0000000008000468                TIM1_CC_IRQHandler
                0x0000000008000468                TSC_IRQHandler
                0x0000000008000468                HardFault_Handler
                0x0000000008000468                SysTick_Handler
                0x0000000008000468                TAMP_STAMP_IRQHandler
                0x0000000008000468                PendSV_Handler
                0x0000000008000468                NMI_Handler
                0x0000000008000468                EXTI3_IRQHandler
                0x0000000008000468                LPTIM2_IRQHandler
                0x0000000008000468                DFSDM1_FLT1_IRQHandler
                0x0000000008000468                I2C3_ER_IRQHandler
                0x0000000008000468                DFSDM1_FLT2_IRQHandler
                0x0000000008000468                EXTI0_IRQHandler
                0x0000000008000468                I2C2_EV_IRQHandler
                0x0000000008000468                CAN1_RX0_IRQHandler
                0x0000000008000468                FPU_IRQHandler
                0x0000000008000468                TIM1_UP_TIM16_IRQHandler
                0x0000000008000468                UsageFault_Handler
                0x0000000008000468                ADC1_2_IRQHandler
                0x0000000008000468                SPI1_IRQHandler
                0x0000000008000468                TIM6_DAC_IRQHandler
                0x0000000008000468                TIM8_UP_IRQHandler
                0x0000000008000468                DMA2_Channel2_IRQHandler
                0x0000000008000468                DMA1_Channel4_IRQHandler
                0x0000000008000468                SAI2_IRQHandler
                0x0000000008000468                DFSDM1_FLT3_IRQHandler
                0x0000000008000468                USART3_IRQHandler
                0x0000000008000468                DMA1_Channel7_IRQHandler
                0x0000000008000468                CAN1_RX1_IRQHandler
                0x0000000008000468                LCD_IRQHandler
                0x0000000008000468                UART5_IRQHandler
                0x0000000008000468                ADC3_IRQHandler
                0x0000000008000468                TIM4_IRQHandler
                0x0000000008000468                DMA2_Channel1_IRQHandler
                0x0000000008000468                QUADSPI_IRQHandler
                0x0000000008000468                I2C1_EV_IRQHandler
                0x0000000008000468                DMA1_Channel6_IRQHandler
                0x0000000008000468                UART4_IRQHandler
                0x0000000008000468                DMA2_Channel4_IRQHandler
                0x0000000008000468                TIM3_IRQHandler
                0x0000000008000468                RCC_IRQHandler
                0x0000000008000468                DMA1_Channel1_IRQHandler
                0x0000000008000468                Default_Handler
                0x0000000008000468                DMA2_Channel7_IRQHandler
                0x0000000008000468                EXTI15_10_IRQHandler
                0x0000000008000468                TIM7_IRQHandler
                0x0000000008000468                SDMMC1_IRQHandler
                0x0000000008000468                TIM5_IRQHandler
                0x0000000008000468                I2C3_EV_IRQHandler
                0x0000000008000468                EXTI9_5_IRQHandler
                0x0000000008000468                RTC_WKUP_IRQHandler
                0x0000000008000468                PVD_PVM_IRQHandler
                0x0000000008000468                SPI2_IRQHandler
                0x0000000008000468                MemManage_Handler
                0x0000000008000468                CAN1_TX_IRQHandler
                0x0000000008000468                SVC_Handler
                0x0000000008000468                DMA2_Channel5_IRQHandler
                0x0000000008000468                DMA1_Channel5_IRQHandler
                0x0000000008000468                EXTI4_IRQHandler
                0x0000000008000468                RNG_IRQHandler
                0x0000000008000468                TIM1_TRG_COM_TIM17_IRQHandler
                0x0000000008000468                DMA1_Channel3_IRQHandler
                0x0000000008000468                COMP_IRQHandler
                0x0000000008000468                WWDG_IRQHandler
                0x0000000008000468                LPUART1_IRQHandler
                0x0000000008000468                DMA2_Channel6_IRQHandler
                0x0000000008000468                TIM2_IRQHandler
                0x0000000008000468                EXTI1_IRQHandler
                0x0000000008000468                USART2_IRQHandler
                0x0000000008000468                DFSDM1_FLT0_IRQHandler
                0x0000000008000468                I2C2_ER_IRQHandler
                0x0000000008000468                DMA1_Channel2_IRQHandler
                0x0000000008000468                TIM8_BRK_IRQHandler
                0x0000000008000468                CAN1_SCE_IRQHandler
                0x0000000008000468                FLASH_IRQHandler
                0x0000000008000468                BusFault_Handler
                0x0000000008000468                USART1_IRQHandler
                0x0000000008000468                OTG_FS_IRQHandler
                0x0000000008000468                SPI3_IRQHandler
                0x0000000008000468                I2C1_ER_IRQHandler
                0x0000000008000468                FMC_IRQHandler
                0x0000000008000468                SWPMI1_IRQHandler
                0x0000000008000468                LPTIM1_IRQHandler
                0x0000000008000468                SAI1_IRQHandler
                0x0000000008000468                DMA2_Channel3_IRQHandler
                0x0000000008000468                RTC_Alarm_IRQHandler
 *(.glue_7)
 .glue_7        0x000000000800046a        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x000000000800046a        0x0 linker stubs
 *(.eh_frame)
 *(.init)
 *(.fini)
                0x0000000008000470                . = ALIGN (0x8)
 *fill*         0x000000000800046a        0x6 
                0x0000000008000470                _etext = .

.vfp11_veneer   0x0000000008000470        0x0
 .vfp11_veneer  0x0000000008000470        0x0 linker stubs

.v4_bx          0x0000000008000470        0x0
 .v4_bx         0x0000000008000470        0x0 linker stubs

.iplt           0x0000000008000470        0x0
 .iplt          0x0000000008000470        0x0 Src/mainHW02.o

.rel.dyn        0x0000000008000470        0x0
 .rel.iplt      0x0000000008000470        0x0 Src/mainHW02.o

.rodata         0x0000000008000470        0x0
                0x0000000008000470                . = ALIGN (0x8)
 *(.rodata)
 *(.rodata*)
                0x0000000008000470                . = ALIGN (0x8)

.ARM.extab      0x0000000008000470        0x0
                0x0000000008000470                . = ALIGN (0x8)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x0000000008000470                . = ALIGN (0x8)

.ARM            0x0000000008000470        0x0
                0x0000000008000470                . = ALIGN (0x8)
                0x0000000008000470                __exidx_start = .
 *(.ARM.exidx*)
                0x0000000008000470                __exidx_end = .
                0x0000000008000470                . = ALIGN (0x8)

.preinit_array  0x0000000008000470        0x0
                0x0000000008000470                . = ALIGN (0x8)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array*)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x0000000008000470                . = ALIGN (0x8)

.init_array     0x0000000008000470        0x0
                0x0000000008000470                . = ALIGN (0x8)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array*)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x0000000008000470                . = ALIGN (0x8)

.fini_array     0x0000000008000470        0x0
                0x0000000008000470                . = ALIGN (0x8)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array*)
                [!provide]                        PROVIDE (__fini_array_end = .)
                0x0000000008000470                . = ALIGN (0x8)
                0x0000000008000470                _sidata = LOADADDR (.data)

.data           0x0000000020000000       0x10 load address 0x0000000008000470
                0x0000000020000000                . = ALIGN (0x8)
                0x0000000020000000                _sdata = .
 *(.data)
 .data          0x0000000020000000        0xf Src/myDataOps.o
                0x0000000020000000                Myword
 *(.data*)
                0x0000000020000010                . = ALIGN (0x8)
 *fill*         0x000000002000000f        0x1 
                0x0000000020000010                _edata = .

.igot.plt       0x0000000020000010        0x0 load address 0x0000000008000480
 .igot.plt      0x0000000020000010        0x0 Src/mainHW02.o
                0x0000000020000010                . = ALIGN (0x4)

.bss            0x0000000020000010        0x0 load address 0x0000000008000480
                0x0000000020000010                _sbss = .
                0x0000000020000010                __bss_start__ = _sbss
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x0000000020000010                . = ALIGN (0x4)
                0x0000000020000010                _ebss = .
                0x0000000020000010                __bss_end__ = _ebss

._user_heap_stack
                0x0000000020000010      0x600 load address 0x0000000008000480
                0x0000000020000010                . = ALIGN (0x8)
                [!provide]                        PROVIDE (end = .)
                [!provide]                        PROVIDE (_end = .)
                0x0000000020000210                . = (. + _Min_Heap_Size)
 *fill*         0x0000000020000010      0x200 
                0x0000000020000610                . = (. + _Min_Stack_Size)
 *fill*         0x0000000020000210      0x400 
                0x0000000020000610                . = ALIGN (0x8)

/DISCARD/
 libc.a(*)
 libm.a(*)
 libgcc.a(*)

.ARM.attributes
                0x0000000000000000       0x37
 *(.ARM.attributes)
 .ARM.attributes
                0x0000000000000000       0x39 Src/mainHW02.o
 .ARM.attributes
                0x0000000000000039       0x25 Src/myDataOps.o
 .ARM.attributes
                0x000000000000005e       0x25 Src/userLED.o
 .ARM.attributes
                0x0000000000000083       0x25 startup/startup_stm32l476xx.o
OUTPUT(NucleoBlinky.elf elf32-littlearm)

.debug_info     0x0000000000000000      0x17b
 .debug_info    0x0000000000000000      0x10d Src/mainHW02.o
 .debug_info    0x000000000000010d       0x26 Src/myDataOps.o
 .debug_info    0x0000000000000133       0x26 Src/userLED.o
 .debug_info    0x0000000000000159       0x22 startup/startup_stm32l476xx.o

.debug_abbrev   0x0000000000000000       0xde
 .debug_abbrev  0x0000000000000000       0xa4 Src/mainHW02.o
 .debug_abbrev  0x00000000000000a4       0x14 Src/myDataOps.o
 .debug_abbrev  0x00000000000000b8       0x14 Src/userLED.o
 .debug_abbrev  0x00000000000000cc       0x12 startup/startup_stm32l476xx.o

.debug_aranges  0x0000000000000000       0x90
 .debug_aranges
                0x0000000000000000       0x28 Src/mainHW02.o
 .debug_aranges
                0x0000000000000028       0x20 Src/myDataOps.o
 .debug_aranges
                0x0000000000000048       0x20 Src/userLED.o
 .debug_aranges
                0x0000000000000068       0x28 startup/startup_stm32l476xx.o

.debug_ranges   0x0000000000000000       0x38
 .debug_ranges  0x0000000000000000       0x18 Src/mainHW02.o
 .debug_ranges  0x0000000000000018       0x20 startup/startup_stm32l476xx.o

.debug_macro    0x0000000000000000      0xdc8
 .debug_macro   0x0000000000000000       0x1a Src/mainHW02.o
 .debug_macro   0x000000000000001a      0xa60 Src/mainHW02.o
 .debug_macro   0x0000000000000a7a      0x34e Src/mainHW02.o

.debug_line     0x0000000000000000      0x242
 .debug_line    0x0000000000000000       0xc9 Src/mainHW02.o
 .debug_line    0x00000000000000c9       0xa1 Src/myDataOps.o
 .debug_line    0x000000000000016a       0x5b Src/userLED.o
 .debug_line    0x00000000000001c5       0x7d startup/startup_stm32l476xx.o

.debug_str      0x0000000000000000     0x36ca
 .debug_str     0x0000000000000000     0x3677 Src/mainHW02.o
                                       0x37e3 (size before relaxing)
 .debug_str     0x0000000000003677       0x21 Src/myDataOps.o
                                         0x66 (size before relaxing)
 .debug_str     0x0000000000003698       0x11 Src/userLED.o
                                         0x64 (size before relaxing)
 .debug_str     0x00000000000036a9       0x21 startup/startup_stm32l476xx.o
                                         0x74 (size before relaxing)

.comment        0x0000000000000000       0x7f
 .comment       0x0000000000000000       0x7f Src/mainHW02.o
                                         0x80 (size before relaxing)

.debug_frame    0x0000000000000000       0x58
 .debug_frame   0x0000000000000000       0x58 Src/mainHW02.o
